{
  "title": "LeetCode Implementation",
  "cells": [
    {
      "type": "text",
      "data": "first missing position:<div>用的是归位的思想 在遍历过程中 我们想要把所有的数字放在“合适”的位置 如果这个位置已经合适或者我们想要换过去的合适的位置已经合适 跳过；</div><div>最后从头开始找 第一个没有合适的位置应该方的数字就是missing的</div>"
    },
    {
      "type": "code",
      "language": "java",
      "data": "public class Solution {\r\n    public int firstMissingPositive(int[] nums) {\r\n        for(int i = 0; i < nums.length; i++) {\r\n            if(nums[i] < 1 || nums[i] > nums.length || nums[i] == i + 1 || nums[nums[i] - 1] == nums[i])\r\n                continue;\r\n            int temp = nums[i];\r\n            nums[i] = nums[temp - 1];\r\n            nums[temp - 1] = temp;\r\n            i--;\r\n        }\r\n        int res = 0;\r\n        while(res < nums.length && nums[res] == res + 1)\r\n            res++;\r\n        return res + 1;\r\n    }\r\n}"
    }
  ]
}